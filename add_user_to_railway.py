#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Railway
"""

import os
import psycopg2
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def add_user_to_railway():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Railway"""
    try:
        DATABASE_URL = os.environ.get('DATABASE_URL')
        if not DATABASE_URL:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –Ω–∞ Railway –∏–ª–∏ –¥–æ–±–∞–≤–∏–ª–∏ DATABASE_URL –ª–æ–∫–∞–ª—å–Ω–æ")
            return False
        
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Railway...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name IN ('user_folders', 'user_categories', 'user_settings', 'user_logs')
        """)
        tables = [row[0] for row in cursor.fetchall()]
        print(f"üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {tables}")
        
        if 'user_folders' not in tables:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ user_folders –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–µ–º...")
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS user_folders (
                    id SERIAL PRIMARY KEY,
                    username VARCHAR(100) NOT NULL,
                    user_id BIGINT,
                    folder_name VARCHAR(100) NOT NULL,
                    role VARCHAR(50) DEFAULT 'user',
                    settings JSONB,
                    permissions JSONB,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    UNIQUE(username, user_id)
                )
            ''')
            conn.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_folders —Å–æ–∑–¥–∞–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username = "–¢–µ—Å—Ç2"
        folder_name = "–¢–µ—Å—Ç234"
        user_id = None  # –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
        
        print(f"üë§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('''
            INSERT INTO user_folders (username, user_id, folder_name, role, settings, permissions)
            VALUES (%s, %s, %s, %s, %s, %s)
            ON CONFLICT (username, user_id) 
            DO UPDATE SET folder_name = EXCLUDED.folder_name
        ''', (
            username, 
            user_id, 
            folder_name, 
            'moderator',
            json.dumps({
                "currency": "Tg",
                "language": "ru", 
                "notifications": True,
                "auto_classification": True
            }),
            json.dumps({
                "add_expenses": True,
                "view_reports": True,
                "manage_reminders": True,
                "planning": True,
                "analytics": True
            })
        ))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute('SELECT COUNT(*) FROM user_folders WHERE username = %s', (username,))
        count = cursor.fetchone()[0]
        
        if count > 0:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
            cursor.execute('SELECT * FROM user_folders ORDER BY created_at DESC')
            records = cursor.fetchall()
            
            print(f"\nüìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ user_folders: {len(records)}")
            for record in records:
                print(f"   ID: {record[0]}, Username: {record[1]}, Folder: {record[3]}, Role: {record[5]}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}")
        
        conn.commit()
        conn.close()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Railway")
    print("=" * 50)
    
    if add_user_to_railway():
        print("\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
        print("üéØ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É user_folders –≤ Railway Dashboard")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   1. DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("   2. –ë–æ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ Railway")
        print("   3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
